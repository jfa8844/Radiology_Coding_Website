# This GitHub Action workflow is triggered on every push to the 'main' branch.
# It uses the Supabase CLI to deploy any new database migrations to your Supabase project.
#
# Workflow Steps:
# 1. Checks out the repository's code.
# 2. Sets up the Supabase CLI in the runner environment.
# 3. Pushes the database migrations using the credentials stored in GitHub Secrets.

name: Push Supabase Migrations

on:
  push:
    branches:
      - main # This action runs only on pushes to the main branch

jobs:
  push_migrations:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest # Use the latest version of the Supabase CLI

      - name: Push Database Migrations
        env:
          # Your Supabase access token, stored as a GitHub Secret
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          # Your Supabase project ID, stored as a GitHub Secret
          SUPABASE_PROJECT_ID: ${{ secrets.PROJECT_ID }}
          # The database password, which the Supabase CLI needs to connect
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          # The Supabase CLI requires the project ID to be available.
          # We link the project first and then push the migrations.
          # The --non-interactive flag is crucial for running in a CI/CD environment.
          supabase link --project-ref $SUPABASE_PROJECT_ID --non-interactive
          supabase db push
