CREATE TABLE "public"."user_dividers" (
    "id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "user_id" uuid NOT NULL,
    "display_column" integer,
    "display_row" integer,
    "created_at" timestamp with time zone NOT NULL DEFAULT now()
);

ALTER TABLE "public"."user_dividers" OWNER TO "postgres";

ALTER TABLE ONLY "public"."user_dividers"
    ADD CONSTRAINT "user_dividers_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."user_dividers"
    ADD CONSTRAINT "user_dividers_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;

ALTER TABLE "public"."user_dividers" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Users can manage their own dividers"
ON "public"."user_dividers"
FOR ALL
USING (auth.uid() = user_id)
WITH CHECK (auth.uid() = user_id);

GRANT ALL ON TABLE "public"."user_dividers" TO "anon";
GRANT ALL ON TABLE "public"."user_dividers" TO "authenticated";
GRANT ALL ON TABLE "public"."user_dividers" TO "service_role";
